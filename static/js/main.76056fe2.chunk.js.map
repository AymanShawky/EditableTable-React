{"version":3,"sources":["Components/LineItem/lineItem.component.jsx","Components/Add-lineItem/addline-item.component.jsx","Components/Notifications/notification.component.jsx","Components/LineItem-Collection/lineItem-collection.component.jsx","App.js","serviceWorker.js","index.js"],"names":["LineItem","props","id","className","placeholder","isNameValid","value","name","onChange","handleChange","type","isAgeValid","age","city","isCityValid","disabled","isDirty","onClick","handleSave","icon","faSave","style","color","size","handleDelete","faTrashAlt","AddLineItem","click","faPlus","marginRight","Notification","classname","message","itemState","faCheckCircle","LineItemCollection","handleAdd","newId","state","items","forEach","item","index","push","setState","handleNotification","findIndex","i","splice","_","e","rowId","row","document","getElementById","childNodes","firstChild","trim","notification","setTimeout","this","Table","striped","hover","bordered","map","key","window","confirm","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76056fe2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./lineItem.component.css\"\r\n\r\n\r\nconst LineItem = (props) => {\r\n\r\nreturn(\r\n<tr id={'rowItem' + props.id}>\r\n    <td className=\"item-id\">{props.id}</td>\r\n    <td className=\"item-name\">\r\n        <input placeholder='e.g. Jone Smith' \r\n            className={'form-control' + (props.isNameValid? '' : ' item-error')} \r\n            value={props.name} \r\n            onChange={props.handleChange}>\r\n        </input>\r\n    </td>\r\n    <td className=\"item-age\">\r\n        <input placeholder='e.g. 25' type='number'\r\n            className={'form-control' +(props.isAgeValid? '' : ' item-error')} \r\n            value={props.age} \r\n            onChange={props.handleChange}>\r\n        </input>\r\n    </td>\r\n    <td className=\"item-city\">\r\n        <select value={props.city}  \r\n            className={'form-control' +(props.isCityValid? '' : ' item-error')}\r\n            onChange={props.handleChange} >\r\n                <option value=\"0\">Select</option>\r\n                <option value=\"1\">California</option>\r\n                <option value=\"2\">London</option>\r\n                <option value=\"3\">Cairo</option>\r\n                <option value=\"4\">Tokyo</option>\r\n        </select> \r\n    </td>\r\n    <td className=\"item-action\">\r\n        <button disabled={!props.isDirty}  onClick={props.handleSave} className=\"btn btn-light\">\r\n            <FontAwesomeIcon icon={faSave} \r\n                style={ props.isDirty? {color:\"green\"} : {color:\"gray\"}}\r\n                size=\"lg\" className=\"item-button\"  />\r\n        </button>\r\n   \r\n        <button onClick={props.handleDelete} className=\"btn btn-light\">\r\n            <FontAwesomeIcon icon={faTrashAlt} \r\n            style={{color:\"red\"}} \r\n            size=\"lg\" className=\"item-button\" />\r\n        </button>\r\n    </td>\r\n</tr>\r\n)}\r\n    \r\nexport default LineItem;","import  React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./addline-item.component.css\"\r\n\r\n\r\nconst AddLineItem = (props)=>\r\n(\r\n\r\n    <button onClick={props.click} \r\n        className=\"btn btn-light add-lineItem\">\r\n           <FontAwesomeIcon icon={faPlus} style={{color: 'green', marginRight:7}}  />\r\n           Add Item\r\n    </button>\r\n\r\n)\r\n\r\nexport default  AddLineItem;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport './notification.component.css'\r\n\r\nconst Notification = (props) => {\r\n \r\n    let classname = '';\r\n    let message = '';\r\n\r\n    switch (props.itemState){\r\n        case 'added':\r\n            classname='notification active added'; \r\n            message= 'Item Added';\r\n            break;\r\n        case 'deleted' :\r\n            classname='notification active deleted'\r\n            message = 'Item Deleted';\r\n            break;\r\n        case 'saved':\r\n            classname='notification active saved'\r\n            message = 'Item Saved';\r\n            break;\r\n                    \r\n        default:\r\n          classname='notification'\r\n    }\r\n\r\n \r\n return(<div className={classname}>\r\n        <FontAwesomeIcon icon={faCheckCircle} size=\"lg\" className=\"notification-icon\" />\r\n        {' ' + message}    \r\n    </div>)\r\n}\r\n\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Table from \"react-bootstrap/Table\";\r\nimport LineItem from \"../LineItem/lineItem.component.jsx\";\r\nimport AddLineItem from \"../Add-lineItem/addline-item.component.jsx\";\r\nimport Notification from \"../Notifications/notification.component.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nclass LineItemCollection extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n          items:[\r\n          {id :1, name :\"Allen Bradly\", age:55, city : 1, isNameValid :true, isAgeValid:true, isCityValid:true, isDirty: false },\r\n          {id :2, name :\"Ayman Shawky\", age:25, city : 3 , isNameValid :true, isAgeValid:true, isCityValid:true, isDirty: false},\r\n          {id :3, name :\"Anders Hejlsberg\", age:65, city : 2 , isNameValid :true, isAgeValid:true, isCityValid:true, isDirty: false},\r\n          {id :4, name :\"Linus Torvalds\", age:45, city : 1 , isNameValid :true, isAgeValid:true, isCityValid:true, isDirty: false},\r\n          {id :5, name :\"Jordan Walke\", age:32, city : 4 , isNameValid :true, isAgeValid:true, isCityValid:true, isDirty: false},\r\n        ],\r\n        notification:''\r\n      };\r\n\r\n    }\r\n\r\n    handleAdd = () => {\r\n      let newId= -1;\r\n      this.state.items.forEach(\r\n        (item, index) => {\r\n          if (item.id > newId){newId = item.id;}\r\n          });\r\n\r\n        const item = {id : newId + 1, name :\"\", age:\"\", city : 0, isDirty: false , isNameValid:false, isAgeValid:false, isCityValid:false};\r\n        let items = this.state.items;\r\n        items.push(item);\r\n\r\n        this.setState({items});\r\n\r\n        this.handleNotification('added');\r\n    }\r\n\r\n    handleDelete = (id) => {\r\n        \r\n        let index = this.state.items.findIndex(i => i.id === id);\r\n        \r\n        let items = this.state.items;\r\n        items.splice(index, 1);\r\n\r\n        this.setState({items});\r\n\r\n        this.handleNotification('deleted');\r\n\r\n    }\r\n    \r\n    handleSave = (id) =>{\r\n      // save item to database\r\n\r\n      let items = this.state.items;\r\n      items.forEach((item, _)=>{\r\n        if(item.id == id){\r\n          item.isDirty=false;\r\n        }\r\n      });\r\n      \r\n        this.setState({items});\r\n    \r\n        this.handleNotification(\"saved\");\r\n      }\r\n\r\n\r\n    handleChange = (e, rowId, id) =>{\r\n        \r\n      let items = this.state.items;\r\n      let row = document.getElementById(rowId);\r\n     \r\n      items.forEach((item, _)=>{\r\n        if(item.id === id){\r\n          item.name = row.childNodes[1].firstChild.value;\r\n          item.age = row.childNodes[2].firstChild.value;\r\n          item.city = row.childNodes[3].firstChild.value;\r\n          \r\n          item.isNameValid = item.name.trim() !== '';\r\n          item.isAgeValid = item.age > 0; \r\n          item.isCityValid = item.city > 0;  \r\n        \r\n          item.isDirty = item.isNameValid && item.isAgeValid && item.isCityValid;\r\n        }\r\n\r\n      });\r\n      \r\n      this.setState({items});\r\n    }\r\n\r\n    handleNotification = (itemState) =>{\r\n      this.setState({notification:itemState});  \r\n      setTimeout(() => {\r\n          this.setState( {notification : ''});\r\n          \r\n        }, 3000);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"App\">\r\n              <h2>Editing inline item using React</h2>\r\n              <div className=\"App-container\">\r\n                <Notification itemState={this.state.notification}></Notification>\r\n                <Table striped hover bordered size=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Id</th>\r\n                      <th>Name</th>\r\n                      <th>Age</th>\r\n                      <th>City</th>\r\n                      <th><AddLineItem click={this.handleAdd}></AddLineItem></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                   \r\n                   {this.state.items.map(item => \r\n                    \r\n                    <LineItem \r\n                          key={item.id} \r\n                          id={item.id} \r\n                          name={item.name} \r\n                          age={item.age} \r\n                          city={item.city} \r\n                          isDirty={item.isDirty}\r\n                          isNameValid = {item.isNameValid}\r\n                          isAgeValid = {item.isAgeValid}\r\n                          isCityValid = {item.isCityValid}\r\n\r\n                          handleSave={() => this.handleSave(item.id)}\r\n                          handleDelete={() => {if(window.confirm('Are you sure to delete this item?')) this.handleDelete(item.id)}}\r\n                          handleChange={(e) => this.handleChange(e, 'rowItem' + item.id, item.id)}\r\n                          >\r\n                        </LineItem>\r\n\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          );\r\n}\r\n}\r\n\r\nexport default LineItemCollection","import React from \"react\";\nimport \"./App.css\";\nimport LineItemCollection from \"./Components/LineItem-Collection/lineItem-collection.component.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return <LineItemCollection></LineItemCollection>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}